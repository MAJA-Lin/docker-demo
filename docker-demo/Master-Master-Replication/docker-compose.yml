version: '3'

networks:
  master-master:
    driver: 'bridge'

volumes:
  master-alpha:
    driver: 'local'
  master-beta:
    driver: 'local'
  adminer:
    driver: 'local'
  node:
    driver: 'local'

services:

    master-alpha:
      build:
        context: ./master-alpha
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${TIMEZONE}
      volumes:
        - ${MASTER_ALPHA_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        - ./logs/master-alpha:/var/log/mysql/
      networks:
        - master-master
      command: [
        '--server-id=1',
        '--auto_increment_increment=2',
        '--auto_increment_offset=1'
      ]

    master-beta:
      build:
        context: ./master-beta
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${TIMEZONE}
      volumes:
        - ${MASTER_BETA_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        - ./logs/master-beta:/var/log/mysql/
      networks:
        - master-master
      command: [
        '--server-id=2',
        '--auto_increment_increment=2',
        '--auto_increment_offset=2'
      ]

    node:
      build:
        context: ./nodejs
        args:
          - NODE_VERSION=${NODE_VERSION}
      volumes:
        - ./app:/var/www/app/
      networks:
        - master-master

    adminer:
      build:
        context: ./adminer
        args:
          - ADMINER_VERSION=${ADMINER_VERSION}
      environment:
        - ADMINER_DESIGN=${ADMINER_DESIGN}
      ports:
        - "${ADMINER_PORT}:8080"
      networks:
        - master-master
