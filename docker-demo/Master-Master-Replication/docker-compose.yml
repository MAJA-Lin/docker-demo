version: '3'

networks:
  master-master:
    driver: 'bridge'

volumes:
  master-1:
    driver: 'local'
  master-2:
    driver: 'local'
  adminer:
    driver: 'local'

services:

    master-1:
      build:
        context: ./master1
        args:
          - MYSQL_VERSION=${MASTER_1_VERSION}
      environment:
        - MYSQL_DATABASE=${MASTER_1_DATABASE}
        - MYSQL_USER=${MASTER_1_USER}
        - MYSQL_PASSWORD=${MASTER_1_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MASTER_1_ROOT_PASSWORD}
        - TZ=${TIMEZONE}
        - MYSQL_TEMP_ADMIN_USER=${MYSQL_TEMP_ADMIN_USER}
      volumes:
        - ${MASTER_1_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        - ./logs/master1:/var/log/mysql/
      networks:
        - master-master
      command: [
        '--server-id=1',
        '--auto_increment_increment=2',
        '--auto_increment_offset=1'
      ]

    master-2:
      build:
        context: ./master2
        args:
          - MYSQL_VERSION=${MASTER_2_VERSION}
      environment:
        - MYSQL_DATABASE=${MASTER_2_DATABASE}
        - MYSQL_USER=${MASTER_2_USER}
        - MYSQL_PASSWORD=${MASTER_2_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MASTER_2_ROOT_PASSWORD}
        - TZ=${TIMEZONE}
        - MYSQL_TEMP_ADMIN_USER=${MYSQL_TEMP_ADMIN_USER}
      volumes:
        - ${MASTER_2_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        - ./logs/master2:/var/log/mysql/
      networks:
        - master-master
      command: [
        '--server-id=2',
        '--auto_increment_increment=2',
        '--auto_increment_offset=2'
      ]

    adminer:
      build:
        context: ./adminer
        args:
          - ADMINER_VERSION=${ADMINER_VERSION}
      environment:
        - ADMINER_DESIGN=${ADMINER_DESIGN}
      ports:
        - "${ADMINER_PORT}:8080"
      networks:
        - master-master
