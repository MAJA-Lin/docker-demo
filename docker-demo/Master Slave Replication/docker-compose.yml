version: '3'

networks:
  demo-db:
    driver: 'bridge'

volumes:
  master:
    driver: 'local'
  slave:
    driver: 'local'
  adminer:
    driver: 'local'

services:

    master:
      build:
        context: ./master
        args:
          - MYSQL_VERSION=${MASTER_VERSION}
      environment:
        - MYSQL_DATABASE=${MASTER_DATABASE}
        - MYSQL_USER=${MASTER_USER}
        - MYSQL_PASSWORD=${MASTER_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MASTER_ROOT_PASSWORD}
        - TZ=${TIMEZONE}
      volumes:
        - ${MASTER_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        - ./logs/master:/var/log/mysql/
      ports:
        - "${MASTER_PORT}:3306"
      networks:
        - demo-db

    slave:
      build:
        context: ./slave
        args:
          - MYSQL_VERSION=${SLAVE_VERSION}
      environment:
        - MYSQL_DATABASE=${SLAVE_DATABASE}
        - MYSQL_USER=${SLAVE_USER}
        - MYSQL_PASSWORD=${SLAVE_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${SLAVE_ROOT_PASSWORD}
        - TZ=${TIMEZONE}
      volumes:
        - ${SLAVE_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        - ./logs/slave:/var/log/mysql/
      ports:
        - "${SLAVE_PORT}:3306"
      networks:
        - demo-db

    adminer:
      build:
        context: ./adminer
        args:
          - ADMINER_VERSION=${ADMINER_VERSION}
      environment:
        - ADMINER_DESIGN=${ADMINER_DESIGN}
      ports:
        - "${ADMINER_PORT}:8080"
      networks:
        - demo-db
